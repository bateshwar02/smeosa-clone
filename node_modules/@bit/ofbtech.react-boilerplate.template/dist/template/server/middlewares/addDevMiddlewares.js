"use strict";

var path = require('path');

var webpack = require('webpack');

var webpackDevMiddleware = require('webpack-dev-middleware');

var webpackHotMiddleware = require('webpack-hot-middleware');

var cookieParser = require('cookie-parser');

var bodyParser = require('body-parser');

var PropyMiddleware = require('./propyMiddleware');

var InitHeadersMiddleware = require('./initHeadersMiddleware');

var ToDoMiddleware = require('./todoMiddleware');

function createWebpackMiddleware(compiler, publicPath) {
  return webpackDevMiddleware(compiler, {
    logLevel: 'warn',
    publicPath: publicPath,
    silent: true,
    stats: 'errors-only',
    serverSideRender: true,
    index: ''
  });
}

module.exports = function addDevMiddlewares(app, webpackConfig) {
  var compiler = webpack(webpackConfig);
  var middleware = createWebpackMiddleware(compiler, webpackConfig.output.publicPath);
  app.use(middleware);
  app.use(webpackHotMiddleware(compiler));
  app.use(bodyParser.json());
  app.use(bodyParser.urlencoded({
    extended: false
  }));
  app.use(cookieParser());
  app.use(PropyMiddleware);
  app.use(InitHeadersMiddleware); // ToDo example middleware

  app.use(ToDoMiddleware); // Since webpackDevMiddleware uses memory-fs internally to store build
  // artifacts, we use it instead

  var fs = middleware.fileSystem;
  app.get('*', function (req, res) {
    fs.readFile(path.join(compiler.outputPath, 'index.html'), function (err, data) {
      if (err) {
        res.sendStatus(404);
        return;
      }

      var file = data.toString();
      file = file.replace(/%%initialState%%/g, JSON.stringify(res.getProps()));
      res.send(file);
    });
  });
};

//# sourceMappingURL=addDevMiddlewares.js.map