"use strict";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var fetch = require('node-fetch');

var envConfig = require('config');

var BASE_URL_MAP = {
  DEFAULT: envConfig.get('api.url')
};

var getBaseUrl = function getBaseUrl(server) {
  if (!server) {
    return BASE_URL_MAP.DEFAULT;
  }

  return BASE_URL_MAP[server.toUpperCase()];
};

var checkStatus = function checkStatus(res) {
  if (res.ok) {
    return res;
  }

  throw res.statusText;
};

module.exports = {
  get: function get(url, callback) {
    var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var beServer = arguments.length > 3 ? arguments[3] : undefined;
    fetch(getBaseUrl(beServer) + url, _objectSpread({
      method: 'GET'
    }, headers)).then(checkStatus).then(function (res) {
      return res.json();
    }).then(function (json) {
      callback(null, json);
    })["catch"](function (err) {
      callback({
        message: err
      });
    });
  }
};

//# sourceMappingURL=api.js.map