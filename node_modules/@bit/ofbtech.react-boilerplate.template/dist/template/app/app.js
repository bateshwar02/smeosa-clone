"use strict";

require("@babel/polyfill");

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _reactRedux = require("react-redux");

var _connectedReactRouter = require("connected-react-router");

var _history = _interopRequireDefault(require("./utils/history"));

require("sanitize.css/sanitize.css");

var _App = _interopRequireDefault(require("./containers/App"));

var _configureStore = _interopRequireDefault(require("./configureStore"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * app.js
 *
 * This is the entry file for the application.
 */
// Needed for redux-saga es6 generator support
// Import all the third party stuff
// Import root app
// Load the favicon and the .htaccess file

/* eslint-disable import/no-unresolved, import/extensions */

/* eslint-enable import/no-unresolved, import/extensions */
// Create redux store with history
// eslint-disable-next-line no-underscore-dangle
var initialState = JSON.parse(window.__INITIAL_STATE__);
var store = (0, _configureStore["default"])(initialState, _history["default"]);
var MOUNT_NODE = document.getElementById('app');

var render = function render() {
  _reactDom["default"].render(_react["default"].createElement(_reactRedux.Provider, {
    store: store
  }, _react["default"].createElement(_connectedReactRouter.ConnectedRouter, {
    history: _history["default"]
  }, _react["default"].createElement(_App["default"], null))), MOUNT_NODE);
};

if (module.hot) {
  // Hot reloadable React components
  // modules.hot.accept does not accept dynamic dependencies,
  // have to be constants at compile-time
  module.hot.accept(['containers/App'], function () {
    _reactDom["default"].unmountComponentAtNode(MOUNT_NODE);

    render();
  });
}

render(); // Install ServiceWorker and AppCache in the end since
// it's not most important operation and if main code fails,
// we do not want it installed

if (process.env.NODE_ENV === 'production') {
  require('offline-plugin/runtime').install(); // eslint-disable-line global-require

}

//# sourceMappingURL=app.js.map