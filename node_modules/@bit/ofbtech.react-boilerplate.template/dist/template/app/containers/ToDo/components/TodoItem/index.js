"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Loadable = _interopRequireDefault(require("../CheckBox/Loadable"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 *
 * TodoItem
 *
 */
// import styled from 'styled-components';
function TodoItem(_ref) {
  var data = _ref.data,
      changeStatus = _ref.changeStatus;

  var handleChange = function handleChange(checked) {
    return changeStatus(data.id, checked);
  };

  var className = "todo-item ui-state-default ".concat(data.completed === true ? 'completed' : 'pending');
  return _react["default"].createElement("li", {
    className: className
  }, _react["default"].createElement("div", {
    className: "checkbox"
  }, _react["default"].createElement("label", null, _react["default"].createElement(_Loadable["default"], {
    checked: data.completed,
    onChange: handleChange
  }), " ", data.title)));
}

TodoItem.propTypes = {
  data: _propTypes["default"].object,
  changeStatus: _propTypes["default"].func
};
TodoItem.defaultProps = {
  data: {},
  changeStatus: function changeStatus() {}
};

var _default = (0, _react.memo)(TodoItem);

exports["default"] = _default;

//# sourceMappingURL=index.js.map