"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 *
 * Back icon for navigation
 *
 */
var ICON = 'M16 7H3.83l5.6-5.6L8 0 0 8l8 8 1.4-1.4L3.83 9H16z';

var IconBack = function IconBack(_ref) {
  var style = _ref.style,
      size = _ref.size,
      stylePath = _ref.stylePath,
      color = _ref.color;
  return _react["default"].createElement('svg', {
    style: style,
    width: size,
    height: size,
    viewBox: '0 0 16 16'
  }, _react["default"].createElement('path', {
    style: stylePath,
    d: ICON,
    fill: color
  }));
};

IconBack.propTypes = {
  size: _propTypes["default"].number,
  color: _propTypes["default"].string,
  stylePath: _propTypes["default"].object,
  style: _propTypes["default"].object
};
IconBack.defaultProps = {
  size: 16,
  color: '#000',
  stylePath: {},
  style: {
    display: 'inline-block',
    verticalAlign: 'middle'
  }
};

var _default = (0, _react.memo)(IconBack);

exports["default"] = _default;

//# sourceMappingURL=IconBack.js.map