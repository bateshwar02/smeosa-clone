"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _tcombForm = _interopRequireDefault(require("tcomb-form"));

var _classnames = _interopRequireDefault(require("classnames"));

var _reactDatepicker = _interopRequireDefault(require("react-datepicker"));

var _renderFormGroup = _interopRequireDefault(require("./renderFormGroup"));

var _BreakPoints = _interopRequireDefault(require("./BreakPoints"));

var _getLabel = _interopRequireDefault(require("./getLabel"));

var _getError = _interopRequireDefault(require("./getError"));

var _getHelp = _interopRequireDefault(require("./getHelp"));

var _common = _interopRequireDefault(require("../../utils/common"));

var _IconCalender = _interopRequireDefault(require("../../icons/IconCalender"));

require("./date.scss");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var SelectboxConfig = _tcombForm["default"].struct({
  addonBefore: _tcombForm["default"].Any,
  addonAfter: _tcombForm["default"].Any,
  horizontal: _tcombForm["default"].maybe(_BreakPoints["default"]),
  buttonBefore: _tcombForm["default"].Any,
  buttonAfter: _tcombForm["default"].Any
}, 'SelectboxConfig');

function create() {
  var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  function date(locals) {
    var newLocal = locals;
    newLocal.config = date.getConfig(newLocal);
    var children = newLocal.config.horizontal ? date.renderHorizontal(newLocal) : date.renderVertical(newLocal);
    return date.renderFormGroup(children, newLocal);
  }

  date.getConfig = overrides.getConfig || function getConfig(locals) {
    return new SelectboxConfig(locals.config || {});
  };

  date.renderDatebox = overrides.renderDatebox || function renderDatebox(dateLocal) {
    var locals = dateLocal;
    var reRender = locals.attrs.reRender;
    delete locals.attrs.reRender;
    var newLocals = {
      onChange: function onChange(val) {
        locals.onChange(val);

        if (_common["default"].isFunction(reRender)) {
          reRender(val);
        }
      },
      selected: locals.value
    };
    newLocals.closeOnSelect = true;

    if (!_common["default"].isUndefinedOrNullOrEmpty(locals.attrs.dateFormat)) {
      newLocals.dateFormat = locals.attrs.dateFormat;
    }

    if (!_common["default"].isUndefinedOrNullOrEmpty(locals.attrs.timeFormat)) {
      newLocals.timeFormat = locals.attrs.timeFormat;
    }

    if (!_common["default"].isUndefinedOrNullOrEmpty(locals.attrs.placeholder)) {
      newLocals.placeholderText = locals.attrs.placeholder;
    }

    if (!_common["default"].isUndefinedOrNull(locals.attrs.isValidDate) && _common["default"].isFunction(locals.attrs.isValidDate)) {
      newLocals.filterDate = locals.attrs.isValidDate;
    }

    if (_common["default"].isString(newLocals.value)) {
      newLocals.selected = parseInt(newLocals.value, 10);
    }

    if (_common["default"].isUndefinedOrNullOrEmpty(newLocals.dropdownMode)) {
      newLocals.dropdownMode = 'select';
    }

    if (_common["default"].isUndefinedOrNullOrEmpty(newLocals.showMonthDropdown)) {
      newLocals.showMonthDropdown = true;
    }

    if (_common["default"].isUndefinedOrNullOrEmpty(newLocals.showYearDropdown)) {
      newLocals.showYearDropdown = true;
    }

    return _react["default"].createElement("div", {
      className: "input-group date-input-group"
    }, _react["default"].createElement(_reactDatepicker["default"], newLocals), _react["default"].createElement("span", {
      className: "inputIcon"
    }, _react["default"].createElement(_IconCalender["default"], {
      size: 20,
      color: "#A8B7C7"
    })));
  };

  date.renderLabel = overrides.renderLabel || function renderLabel(locals) {
    return (0, _getLabel["default"])({
      label: locals.label,
      htmlFor: locals.attrs.id,
      breakpoints: locals.config.horizontal
    });
  };

  date.renderError = overrides.renderError || function renderError(locals) {
    return (0, _getError["default"])(locals);
  };

  date.renderHelp = overrides.renderHelp || function renderHelp(locals) {
    return (0, _getHelp["default"])(locals);
  };

  date.renderVertical = overrides.renderVertical || function renderVertical(locals) {
    return [date.renderLabel(locals), date.renderDatebox(locals), date.renderError(locals), date.renderHelp(locals)];
  };

  date.renderHorizontal = overrides.renderHorizontal || function renderHorizontal(locals) {
    var label = date.renderLabel(locals);
    var className = label ? locals.config.horizontal.getInputClassName() : locals.config.horizontal.getOffsetClassName();
    return [label, _react["default"].createElement("div", {
      className: (0, _classnames["default"])(className)
    }, date.renderDatebox(locals), date.renderError(locals), date.renderHelp(locals))];
  };

  date.renderFormGroup = overrides.renderFormGroup || _renderFormGroup["default"];

  date.clone = function clone() {
    var newOverrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return create(_objectSpread({}, overrides, {}, newOverrides));
  };

  return date;
}

var _default = create();

exports["default"] = _default;

//# sourceMappingURL=Date.js.map