"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _moment = _interopRequireDefault(require("moment"));

var _tcombForm = _interopRequireDefault(require("tcomb-form"));

var _classnames = _interopRequireDefault(require("classnames"));

var _renderFormGroup = _interopRequireDefault(require("./renderFormGroup"));

var _BreakPoints = _interopRequireDefault(require("./BreakPoints"));

var _getLabel = _interopRequireDefault(require("./getLabel"));

var _getError = _interopRequireDefault(require("./getError"));

var _getHelp = _interopRequireDefault(require("./getHelp"));

var _common = _interopRequireDefault(require("../../utils/common"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var SelectboxConfig = _tcombForm["default"].struct({
  addonBefore: _tcombForm["default"].Any,
  addonAfter: _tcombForm["default"].Any,
  horizontal: _tcombForm["default"].maybe(_BreakPoints["default"]),
  buttonBefore: _tcombForm["default"].Any,
  buttonAfter: _tcombForm["default"].Any
}, 'SelectboxConfig');

function create() {
  var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var date = function date(locals) {
    var newLocals = locals;
    newLocals.config = date.getConfig(newLocals);
    var children = newLocals.config.horizontal ? date.renderHorizontal(newLocals) : date.renderVertical(newLocals);
    return date.renderFormGroup(children, newLocals);
  };

  date.getConfig = overrides.getConfig || function getConfig(locals) {
    return new SelectboxConfig(locals.config || {});
  };

  date.renderDateRangebox = overrides.renderDatebox || function renderDatebox(locals) {
    var newLocals = {}; // const value = {};
    // let display = locals.attrs.placeholder || '';

    if (!_common["default"].isUndefinedOrNullOrEmptyObject(locals.value)) {
      newLocals.startDate = (0, _moment["default"])(locals.value.startDate);
      newLocals.endDate = (0, _moment["default"])(locals.value.endDate); // if (!Utils.isUndefinedOrNullOrEmpty(locals.value.startDate) && !Utils.isUndefinedOrNullOrEmpty(locals.value.endDate)) {
      //     display = `${moment(locals.value.startDate).format('DD MMM YYYY')} - ${moment(locals.value.endDate).format('DD MMM YYYY')}`;
      // }
    }

    newLocals.onApply = function (ev, picker) {
      var value = {
        startDate: picker.startDate.valueOf(),
        endDate: picker.endDate.valueOf()
      };
      locals.onChange(value);
    };

    newLocals.onCancel = function () {
      var value = {
        startDate: null,
        endDate: null
      };
      locals.onChange(value);
    };

    newLocals.ranges = {
      Today: [(0, _moment["default"])(), (0, _moment["default"])()],
      Yesterday: [(0, _moment["default"])().subtract(1, 'days'), (0, _moment["default"])().subtract(1, 'days')],
      'Last 7 Days': [(0, _moment["default"])().subtract(6, 'days'), (0, _moment["default"])()],
      'Last 30 Days': [(0, _moment["default"])().subtract(29, 'days'), (0, _moment["default"])()],
      'This Month': [(0, _moment["default"])().startOf('month'), (0, _moment["default"])().endOf('month')],
      'Last Month': [(0, _moment["default"])().subtract(1, 'month').startOf('month'), (0, _moment["default"])().subtract(1, 'month').endOf('month')]
    };
    return null; // return (
    //     <DateRangePicker {..._locals}>
    //         <button className="btn btn-block btn-default date-picker-btn">
    //             <span className="material-icons m-r-10">date_range</span>
    //             <span>{display}</span>
    //         </button>
    //     </DateRangePicker>
    // )
  };

  date.renderLabel = overrides.renderLabel || function renderLabel(locals) {
    return (0, _getLabel["default"])({
      label: locals.label,
      htmlFor: locals.attrs.id,
      breakpoints: locals.config.horizontal
    });
  };

  date.renderError = overrides.renderError || function renderError(locals) {
    return (0, _getError["default"])(locals);
  };

  date.renderHelp = overrides.renderHelp || function renderHelp(locals) {
    return (0, _getHelp["default"])(locals);
  };

  date.renderVertical = overrides.renderVertical || function renderVertical(locals) {
    return [date.renderLabel(locals), date.renderDateRangebox(locals), date.renderError(locals), date.renderHelp(locals)];
  };

  date.renderHorizontal = overrides.renderHorizontal || function renderHorizontal(locals) {
    var label = date.renderLabel(locals);
    var className = label ? locals.config.horizontal.getInputClassName() : locals.config.horizontal.getOffsetClassName();
    return [label, _react["default"].createElement("div", {
      className: (0, _classnames["default"])(className)
    }, date.renderDateRangebox(locals), date.renderError(locals), date.renderHelp(locals))];
  };

  date.renderFormGroup = overrides.renderFormGroup || _renderFormGroup["default"];

  date.clone = function clone() {
    var newOverrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return create(_objectSpread({}, overrides, {}, newOverrides));
  };

  return date;
}

var _default = create();

exports["default"] = _default;

//# sourceMappingURL=DateRange.js.map