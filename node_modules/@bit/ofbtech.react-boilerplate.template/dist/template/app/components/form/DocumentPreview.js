"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _common = _interopRequireDefault(require("../../utils/common"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var imageSupport = ['png', 'jpg', 'jpeg', 'gif'];

var DocumentPreview =
/*#__PURE__*/
function (_Component) {
  _inherits(DocumentPreview, _Component);

  _createClass(DocumentPreview, null, [{
    key: "renderImg",
    value: function renderImg(document) {
      return _react["default"].createElement("img", {
        src: document.url,
        alt: document.name,
        className: "img-responsive"
      });
    }
  }, {
    key: "renderPdf",
    value: function renderPdf(document) {
      return _react["default"].createElement("object", {
        id: "pdfPane",
        type: "application/pdf",
        "aria-label": "document",
        data: document.url
      });
    }
  }, {
    key: "renderOther",
    value: function renderOther() {
      return _react["default"].createElement("div", {
        className: "document-preview-not-available"
      }, _react["default"].createElement("p", null, "Preview not available."));
    } // static getDocumentUrl(document) {
    //     // return DocumentService.getDocumentUrl(document)
    //     //     .then(response => response)
    //     //     .catch(() => ({
    //     //         success: false,
    //     //         errorMessage: 'Something went wrong while fetching details file server',
    //     //     }));
    // }

  }]);

  function DocumentPreview(props) {
    var _this;

    _classCallCheck(this, DocumentPreview);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(DocumentPreview).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "changeDocument", function (action) {
      var currentDocument = _this.props.currentIndex;
      var totalDocuments = _this.props.files.length - 1;

      if (action === 'next') {
        currentDocument = currentDocument >= totalDocuments ? 0 : currentDocument + 1;

        _this.props.changeFilePreview(_this.props.files[currentDocument], currentDocument);
      } else if (action === 'prev') {
        currentDocument = currentDocument <= 0 ? totalDocuments : currentDocument - 1;

        _this.props.changeFilePreview(_this.props.files[currentDocument], currentDocument);
      } else {
        throw new Error('wrong action selected');
      }
    });

    _defineProperty(_assertThisInitialized(_this), "downloadFile", function () {
      window.open(_this.state.document.url, '_blank');
    });

    _this.state = {
      document: null
    };
    return _this;
  }

  _createClass(DocumentPreview, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var document = this.props.file;
      this.setDocumentInState(document);
    } // eslint-disable-next-line camelcase

  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      var document = nextProps.file;
      this.setDocumentInState(document);
    }
  }, {
    key: "setDocumentInState",
    value: function setDocumentInState(document) {
      var _this2 = this;

      if (_common["default"].isUndefinedOrNullOrEmptyObject(document)) {
        return;
      }

      DocumentPreview.getDocumentUrl(document).then(function (response) {
        if (response.success) {
          var newDoc = document;
          newDoc.url = response.data;

          _this2.setState({
            document: newDoc
          });
        }
      })["catch"](function (error) {
        throw new Error(error);
      });
    }
  }, {
    key: "renderDocument",
    value: function renderDocument() {
      var document = this.state.document;

      if (_common["default"].isUndefinedOrNullOrEmptyObject(document)) {
        return null;
      }

      var tempFile = document.storagePath.split('.');
      var extenstion = tempFile[tempFile.length - 1];

      if (_common["default"].isUndefinedOrNullOrEmpty(extenstion)) {
        return DocumentPreview.renderOther();
      }

      if (imageSupport.indexOf(extenstion.toLowerCase()) > -1) {
        return DocumentPreview.renderImg(document);
      }

      if (extenstion.toLowerCase() === 'pdf') {
        return DocumentPreview.renderPdf(document);
      }

      return DocumentPreview.renderOther();
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      return _react["default"].createElement("div", {
        className: "modal fade",
        role: "dialog",
        id: "".concat(this.props.name, "-preview-modal")
      }, _react["default"].createElement("div", {
        className: "modal-dialog modal-lg",
        role: "document"
      }, _react["default"].createElement("div", {
        className: "modal-content"
      }, _react["default"].createElement("div", {
        className: "modal-header"
      }, _react["default"].createElement("button", {
        type: "button",
        className: "close",
        "data-dismiss": "modal",
        "aria-label": "Close"
      }, _react["default"].createElement("span", {
        "aria-hidden": "true"
      }, "\xD7")), _react["default"].createElement("h4", {
        className: "modal-title"
      }, !_common["default"].isUndefinedOrNullOrEmpty(this.state.document) && _react["default"].createElement("div", null, this.state.document.documentName, _react["default"].createElement("button", {
        type: "button",
        onClick: function onClick() {
          _this3.downloadFile();
        },
        className: "btn btn-xs btn-oxy-blue pull-right download-document-btn"
      }, _react["default"].createElement("i", {
        className: "material-icons"
      }, "file_download"), " Download")))), _react["default"].createElement("div", {
        className: "modal-body document-preview"
      }, _react["default"].createElement("div", {
        className: "document-container"
      }, this.renderDocument(), _react["default"].createElement("button", {
        type: "button",
        className: "download-preview-btn prev-btn",
        onClick: function onClick() {
          _this3.changeDocument('prev');
        }
      }, _react["default"].createElement("i", {
        className: "material-icons"
      }, "keyboard_arrow_left")), _react["default"].createElement("button", {
        type: "button",
        className: "download-preview-btn next-btn",
        onClick: function onClick() {
          _this3.changeDocument('next');
        }
      }, _react["default"].createElement("i", {
        className: "material-icons"
      }, "keyboard_arrow_right")))))));
    }
  }]);

  return DocumentPreview;
}(_react.Component);

exports["default"] = DocumentPreview;
DocumentPreview.propTypes = {
  name: _propTypes["default"].string.isRequired,
  files: _propTypes["default"].array.isRequired,
  file: _propTypes["default"].object.isRequired,
  currentIndex: _propTypes["default"].string.isRequired,
  changeFilePreview: _propTypes["default"].func.isRequired
};

//# sourceMappingURL=DocumentPreview.js.map